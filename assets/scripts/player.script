local GRAVITY = -64
local WALK_SPEED = 512
local JUMP_HEIGHT = 1536 
local MAX_JUMP_AMOUNT = 1

function init(self)
	self.velocity = vmath.vector3()
	self.is_falling = false
	self.current_jump_amount = 0
	msg.post("#", "acquire_input_focus")
end

function fixed_update(self, dt)
	self.velocity.y = math.max(self.velocity.y + GRAVITY)

	if self.velocity.y ~= GRAVITY and not self.is_falling then
		sprite.play_flipbook("#sprite", "jump")
		self.is_falling = true
	end
	
	if self.velocity.y < -1280 then
		self.velocity.y = -920
	end
	
	update_position(self.velocity * dt)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") and message.normal.y == 1 then
		self.velocity.y = 0

		if self.is_falling then
			self.is_falling = false
			self.current_jump_amount = 0
			sound.play("#land")
			if self.velocity.x == 0 then
				sprite.play_flipbook("#sprite", "idle")
			else
				sprite.play_flipbook("#sprite", "walk")
			end	
		end
		
		update_position(vmath.vector3(0, message.distance, 0))
	end
end

function on_input(self, action_id, action)
	if action_id == hash("space") and action.pressed and self.current_jump_amount < MAX_JUMP_AMOUNT and not self.is_falling then
		self.velocity.y = self.velocity.y + JUMP_HEIGHT
		self.current_jump_amount = self.current_jump_amount + 1
		sound.play("#jump")
		update_position(vmath.vector3(0, 2, 0))
	end
	
	if action.released and (action_id == hash("left") or action_id == hash("right")) then
		travel(self, 0, "idle")
	elseif action_id == hash("left") and action.pressed then
		travel(self, -WALK_SPEED, "walk")
		sprite.set_hflip("#sprite", true)
	elseif action_id == hash("right") and action.pressed then
		travel(self, WALK_SPEED, "walk")
		sprite.set_hflip("#sprite",false)
	end
end

function update_position(vector_3)
	go.set_position(go.get_position() + vector_3)
end

function travel(self, velocity_x, animation_id)
	self.velocity.x = velocity_x
	
	if not self.is_falling then
		sprite.play_flipbook("#sprite", animation_id)
	end
end