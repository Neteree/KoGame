local GRAVITY = -64
local WALK_SPEED = 512
local JUMP_HEIGHT = 1536 
local MAX_JUMP_AMOUNT = 1

function init(self)
	self.velocity = vmath.vector3()
	msg.post("#", "acquire_input_focus")
end

function fixed_update(self, dt)
	self.velocity.y = self.velocity.y + GRAVITY
	update_position(self.velocity * dt)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") and message.normal.y == 1 then
		self.velocity.y = 0
		self.current_jump_amount = 0
		update_position(vmath.vector3(0, message.distance, 0))
	end
end

function on_input(self, action_id, action)
	if action_id == hash("space") and action.pressed and self.current_jump_amount < MAX_JUMP_AMOUNT then
		self.velocity.y = self.velocity.y + JUMP_HEIGHT
		self.current_jump_amount = self.current_jump_amount + 1
		update_position(vmath.vector3(0, 2, 0))
		sound.play("#jump")
	end
	
	if (action_id == hash("left") or action_id == hash("right")) and action.released then
		self.velocity.x = 0
		sprite.play_flipbook("#sprite", "idle")
	elseif action_id == hash("left") and action.pressed then
		self.velocity.x = -WALK_SPEED
		sprite.play_flipbook("#sprite", "walk")
		sprite.set_hflip("#sprite", true)
	elseif action_id == hash("right") and action.pressed then
		self.velocity.x = WALK_SPEED
		sprite.play_flipbook("#sprite", "walk")
		sprite.set_hflip("#sprite", false)
	end
end

function update_position(vector_3)
	go.set_position(go.get_position() + vector_3)
end